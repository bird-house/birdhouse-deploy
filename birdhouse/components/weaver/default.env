# ------
# weaver
# ------

# All env in this default.env can be overridden by env.local.

# All env in this default.env must NOT depend on any other env.  If they do,
# must use single quote to avoid early expansion before overrides in local.env
# are applied and must add to the list of DELAYED_EVAL.

# add any new variables not already in 'VARS' or 'OPTIONAL_VARS' that must be replaced in templates here
# single quotes are important in below list to keep variable names intact until 'pavics-compose' parses them
EXTRA_VARS='
  $WEAVER_CONFIG
  $WEAVER_VERSION
  $WEAVER_MONGODB_VERSION
  $WEAVER_MONGODB_HOST
  $WEAVER_MONGODB_PORT
  $WEAVER_MONGODB_URL
  $WEAVER_MANAGER_NAME
  $WEAVER_WORKER_NAME
  $WEAVER_WPS_NAME
  $WEAVER_WPS_OUTPUTS_DIR
  $WEAVER_WPS_OUTPUTS_PATH
  $WEAVER_WPS_PATH
  $WEAVER_WPS_WORKDIR
  $WEAVER_MANAGER_LOG_LEVEL
  $WEAVER_WORKER_LOG_LEVEL
  $WEAVER_WPS_PROVIDERS
  $WEAVER_WPS_PROVIDERS_MAX_TIME
'
# extend the original 'VARS' from 'birdhouse/pavics-compose.sh' to employ them for template substitution
# adding them to 'VARS', they will also be validated in case of override of 'default.env' using 'env.local'
VARS="$VARS $EXTRA_VARS"

# configuration can be EMS|ADES|HYBRID
# corresponding "/<WEAVER_CONFIG>" route will redirect to the protected 'weaver' service
#   EMS:    run only as EMS, all processes are dispatched to one of known remote ADES (see data-sources.json)
#   ADES:   run only as ADES, only local processes are defined (no providers), can receive
#   HYBRID: mode needed to allow simultaneous run of Docker apps (ADES) + remote WPS services (EMS)
export WEAVER_CONFIG=HYBRID

# default release version that will be used to fetch docker images (API mananger & celery workers services)
export WEAVER_VERSION=4.22.0

# default release of the MongoDB version employed by Weaver
# NOTE:
#   MongoDB>=5.0 is REQUIRED for Weaver>=4.5.0
export WEAVER_MONGODB_VERSION=5.0.4
# URL is used by both Weaver API and Celery Worker
# it should contain the docker service name as host to map using shared link between images
# if credentials are desired, they can be defined with the override of the URL variable
export WEAVER_MONGODB_HOST=weaver-mongodb
export WEAVER_MONGODB_PORT=27017
export WEAVER_MONGODB_URL=mongodb://${WEAVER_MONGODB_HOST}:${WEAVER_MONGODB_PORT}

# real names of the weaver/worker services
# 'WEAVER_MANAGER_NAME' value will generate "<server-fqdn>/<name>" URI to access its API behind secured proxy
# 'WEAVER_MANAGER_NAME' and 'WEAVER_WORKER_NAME' are also employed to define name of the containers in docker-compose
export WEAVER_MANAGER_NAME=weaver
export WEAVER_WORKER_NAME=weaver-worker
# below is used to define a separate Magpie service that can protect the WPS-1 endpoint of Weaver
# FIXME:
#   remove when corresponding WPS-1/WPS-REST 'process' entries are managed under common service
#   https://github.com/Ouranosinc/Magpie/issues/360
export WEAVER_WPS_NAME=${WEAVER_MANAGER_NAME}-wps

# WARNING:
#   See important notes about volume directory paths in 'docker-compose-extra.yml'
# WPS-1/2 path under Weaver's root endpoint
export WEAVER_WPS_PATH=/wps
# route URI where the resulting process data will be remotely accessible
# NOTE:
#   '/wpsoutputs/<bird>' is the directory location format employed everywhere
export WEAVER_WPS_OUTPUTS_PATH="/wpsoutputs/weaver"
# data persistence of wps outputs (directory path)
# NOTE:
#   follow the same convension of 'wps_outputs/<bird>' as the rest of the stact
export WEAVER_WPS_OUTPUTS_DIR="${DATA_PERSIST_ROOT}/wps_outputs/weaver"
export WEAVER_WPS_WORKDIR="/tmp/wps_workdir/weaver"

# logging
export WEAVER_MANAGER_LOG_LEVEL=INFO
export WEAVER_WORKER_LOG_LEVEL=INFO

# registration of WPS providers offerred by this instance
export WEAVER_WPS_PROVIDERS="
    finch
    flyingpigeon
    hummingbird
    malleefowl
    raven
"
# control maximum timeout to abandon registration (duration in seconds)
export WEAVER_WPS_PROVIDERS_MAX_TIME=120
