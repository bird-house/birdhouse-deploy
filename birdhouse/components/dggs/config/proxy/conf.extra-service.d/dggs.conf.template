
    location = /dggs-auth {
        internal;
        # note: using 'TWITCHER_VERIFY_PATH' path to avoid performing the request via proxy 'TWITCHER_PROTECTED_PATH'
        # This ensures that access is validated for the user, but does not trigger its access/download twice.
        # It is also more efficient, since less contents are transferred/buffered.
        proxy_pass ${BIRDHOUSE_PROXY_SCHEME}://${BIRDHOUSE_FQDN_PUBLIC}${TWITCHER_VERIFY_PATH}/$request_uri;
        proxy_pass_request_body off;
        proxy_set_header Host $host;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Forwarded-Proto $real_scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host:$server_port;
    }

    # Generic API docs
    location ${DGGS_API_PATH}/docs {
        proxy_pass http://dggs:8000${DGGS_DOCS_PATH_INTERNAL}/$is_args$args;
        proxy_set_header Host $host;
        #proxy_set_header X-Original-URI $request_uri;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $real_scheme;
        proxy_set_header X-Forwarded-Host $http_host:$server_port;
        #proxy_set_header X-Script-Name ${DGGS_API_PATH};
    }
    location ${DGGS_TILES_PATH}/docs {
        proxy_pass http://dggs:8000${DGGS_DOCS_PATH_INTERNAL}/$is_args$args;
        proxy_set_header Host $host;
        #proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $real_scheme;
        proxy_set_header X-Forwarded-Host $http_host:$server_port;
        #proxy_set_header X-Script-Name ${DGGS_API_PATH};
    }
    location = ${DGGS_API_PATH}/json {
        rewrite ^/${DGGS_API_PATH}/(.*) /$1 break;
        proxy_pass http://dggs:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $real_scheme;
        proxy_set_header X-Forwarded-Host $http_host:$server_port;
        #proxy_set_header X-Script-Name ${DGGS_API_PATH};
    }

    # DGGS API
    location = ${DGGS_API_PATH} {
        return 301 ${DGGS_API_PATH}/$is_args$args;
    }
    location ~ ^${DGGS_API_PATH}/(.*)$ {
        auth_request /dggs-auth;
        auth_request_set $auth_status $upstream_status;

        proxy_pass http://dggs:8000${DGGS_API_PATH_INTERNAL}/$1$is_args$args;
        proxy_set_header Host $host;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $real_scheme;
        proxy_set_header X-Forwarded-Host $http_host:$server_port;
    }
    # Tiles API
    location = ${DGGS_TILES_PATH} {
        return 301 ${DGGS_TILES_PATH}/$is_args$args;
    }
    location ~ ^${DGGS_TILES_PATH}/(.*)$ {
        auth_request /dggs-auth;
        auth_request_set $auth_status $upstream_status;

        proxy_pass http://dggs:8000${DGGS_TILES_PATH_INTERNAL}/$1$is_args$args;
        proxy_set_header Host $host;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $real_scheme;
        proxy_set_header X-Forwarded-Host $http_host:$server_port;
    }

    # NOTE:
    #   Redirect to internal network of Twitcher with root endpoint and alias allows to set
    #   the same 'magpie' permissions on the 'dggs' service.
    #   This allows verification of the same service user/group permissions references regardless
    #   whether the *shortcut* endpoint, the alias or the explicit 'twitcher' proxy route is used.
    location = ${TWITCHER_PROTECTED_PATH}${DGGS_API_PATH} {
        return 301 ${DGGS_API_PATH}/$is_args$args;
    }
    location ~ ^${TWITCHER_PROTECTED_PATH}${DGGS_API_PATH}/(.*)$ {
        return 308 ${DGGS_API_PATH}/$1$is_args$args;
    }
    location = ${TWITCHER_PROTECTED_PATH}${DGGS_TILES_PATH} {
        return 301 ${DGGS_TILES_PATH}/$is_args$args;
    }
    location ~ ^${TWITCHER_PROTECTED_PATH}${DGGS_TILES_PATH}/(.*)$ {
        return 308 ${DGGS_TILES_PATH}/$1$is_args$args;
    }

    # NOTE:
    #   Redirect to typical endpoints employed by clients.
    #   The 'collection' variant is explicitly listed since '/ogcapi/' prefix could be
    #   used for other services (e.g.: '/ogcapi/processes' for Weaver).
    location ~ ^/ogcapi/dggs(.*)$ {
        return 302 ${DGGS_API_PATH}$1$is_args$args;
    }
    location ~ ^/ogcapi/collections/(.*)/dggs(.*)$ {
        return 302 ${DGGS_API_PATH}/collections/$1/dggs$2$is_args$args;
    }
    location ~ ^/ogcapi/tiles(.*)$ {
        return 302 ${DGGS_TILES_PATH}$1$is_args$args;
    }
