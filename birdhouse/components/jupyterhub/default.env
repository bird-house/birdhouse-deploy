# All env in this default.env can be overridden by env.local.

# All env in this default.env must NOT depend on any other env.  If they do, they
# must use single quotes to avoid early expansion before overrides in env.local
# are applied and must be added to the list of DELAYED_EVAL.

export JUPYTERHUB_DOCKER=pavics/jupyterhub
export JUPYTERHUB_VERSION=5.2.1-20241114
export JUPYTERHUB_IMAGE='${JUPYTERHUB_DOCKER}:${JUPYTERHUB_VERSION}'
export JUPYTERHUB_IMAGE_URI='registry.hub.docker.com/${JUPYTERHUB_IMAGE}'

# Jupyter single-user server images, can be overriden in env.local to have a space separated list of multiple images
export JUPYTERHUB_DOCKER_NOTEBOOK_IMAGES="pavics/workflow-tests:py311-250423-update250730"

# Name of the image displayed on the JupyterHub image selection page
# Can be overriden in env.local to have a space separated list of multiple images, the name order must correspond
# to the order of the JUPYTERHUB_DOCKER_NOTEBOOK_IMAGES variable
# Note that the selection names are also used as directory names for the tutorial-notebooks directories mounted when
# starting the corresponding image. The name can use the '<name>' or the '<name>:<version>' format. The version will be
# excluded when mounting the corresponding directory.
export JUPYTERHUB_IMAGE_SELECTION_NAMES="pavics"

# Folder on the host to persist Jupyter user data (noteboooks, HOME settings)
export JUPYTERHUB_USER_DATA_DIR='${BIRDHOUSE_DATA_PERSIST_ROOT}/jupyterhub_user_data'

# Activates mounting a tutorial-notebooks subfolder that has the same name as the spawned image on JupyterHub
export JUPYTERHUB_MOUNT_IMAGE_SPECIFIC_NOTEBOOKS=false

# Path to the file containing the clientID for the google drive extension for jupyterlab
export JUPYTER_GOOGLE_DRIVE_SETTINGS=""

# Jupyter public demo account with limited computing resources for security reasons
export JUPYTER_DEMO_USER="demo"
# Changing any limits requires restarting the jupyter user server
export JUPYTER_DEMO_USER_MEM_LIMIT="2G"  # ex: 2G, 500M
# CPU limit seems not honored by DockerSpawner
export JUPYTER_DEMO_USER_CPU_LIMIT="0.5"  # 50% of 1 CPU

# See config/jupyterhub/custom_templates/login.html.template
export JUPYTER_LOGIN_BANNER_TOP_SECTION=""
export JUPYTER_LOGIN_BANNER_BOTTOM_SECTION=""

# Timeout (in seconds, default: 3 days) to shut down the user server when no kernels or terminals
# are running and there is no activity. If undefined or set to zero, the feature will not be enabled.
export JUPYTER_IDLE_SERVER_CULL_TIMEOUT=259200
# Timeout (in seconds, default: 1 day) after which individual
# user kernels/terminals are considered idle and ready to be culled.
export JUPYTER_IDLE_KERNEL_CULL_TIMEOUT=86400
# Interval (in seconds) on which to check for idle kernels exceeding the cull timeout value.
# Enabled only if 'JUPYTER_IDLE_KERNEL_CULL_TIMEOUT' is provided and greater than zero.
# If this value is not provided, equal to zero, or is set higher than 'JUPYTER_IDLE_KERNEL_CULL_TIMEOUT',
# it will be automatically reduced by half of the timeout value to ensure that it can be effective.
export JUPYTER_IDLE_KERNEL_CULL_INTERVAL=0

# Allow for adding new config or override existing config in
# config/jupyterhub/jupyterhub_config.py.template.
export JUPYTERHUB_CONFIG_OVERRIDE=""

# URL used to verify that a logged in user has permission to access Jupyterhub
# To disable this feature, unset this variable. However, disabling this feature is NOT
# recommended as it may permit unauthorized users from accessing jupyterhub.
export JUPYTERHUB_AUTHENTICATOR_AUTHORIZATION_URL='http://twitcher:8000/ows/verify/jupyterhub'

# 32 byte hex-encoded key used to encrypt a user's authentication state in the juptyerhub database.
# If set, jupyterhub will periodically check if the user still has permission to access jupyterhub (according to Magpie)
export JUPYTERHUB_CRYPT_KEY=

# Jupyterhub will check if the current logged in user still has permission to access jupyterhub (according to Magpie)
# if their authentication information is older that this value (in seconds). This value is only applied if
# JUPYTERHUB_CRYPT_KEY is set.
export JUPYTERHUB_AUTHENTICATOR_REFRESH_AGE=60

# Usernames that should be given admin access in jupyterhub
export JUPYTERHUB_ADMIN_USERS='{\"${MAGPIE_ADMIN_USERNAME}\"}'  # python set syntax

export DELAYED_EVAL="
  $DELAYED_EVAL
  JUPYTERHUB_USER_DATA_DIR
  JUPYTERHUB_ADMIN_USERS
  JUPYTERHUB_IMAGE
  JUPYTERHUB_IMAGE_URI
"

# add any new variables not already in 'VARS' or 'OPTIONAL_VARS' that must be replaced in templates here
VARS="
  $VARS
  \$JUPYTERHUB_ADMIN_USERS
"

OPTIONAL_VARS="
  $OPTIONAL_VARS
  \$JUPYTERHUB_ENABLE_MULTI_NOTEBOOKS
  \$JUPYTER_DEMO_USER
  \$JUPYTER_LOGIN_BANNER_TOP_SECTION
  \$JUPYTER_LOGIN_BANNER_BOTTOM_SECTION
  \$JUPYTER_LOGIN_TERMS_URL
  \$JUPYTERHUB_CONFIG_OVERRIDE
  \$JUPYTERHUB_DOCKER
  \$JUPYTERHUB_VERSION
  \$JUPYTERHUB_IMAGE
  \$JUPYTERHUB_IMAGE_URI
  \$JUPYTERHUB_AUTHENTICATOR_AUTHORIZATION_URL
  \$JUPYTERHUB_AUTHENTICATOR_REFRESH_AGE
  \$JUPYTER_IDLE_SERVER_CULL_TIMEOUT
  \$JUPYTER_IDLE_KERNEL_CULL_TIMEOUT
  \$JUPYTER_IDLE_KERNEL_CULL_INTERVAL
  \$JUPYTERHUB_USER_DATA_DIR
"

# add any component that this component requires to run
COMPONENT_DEPENDENCIES="
  ./components/magpie
"
