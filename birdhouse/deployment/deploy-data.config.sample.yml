# Sample config file for deploy-data script.
#
# Many git repos are supported.  For each repo, many mapping between source dir
# and destination dir are supported.  For each mapping, extra rsync option can
# be provided to include/exclude a subset of files to keep in sync.

config:
  # optional, default "/tmp/deploy-data-clone-cache"
  # can also be set by env var DEPLOY_DATA_CHECKOUT_CACHE
  # setting in this config file have precedence over env var
  #checkout_cache:

  # optional, default unset
  # for git clone over ssh, useful for private repos
  # can also be set by env var DEPLOY_DATA_GIT_SSH_IDENTITY_FILE
  # setting in this config file have precedence over env var
  #git_ssh_identity_file: /path/to/id_rsa

deploy:
  # this form if clone over ssh: git@github.com:Ouranosinc/jenkins-master.git
- repo_url: https://github.com/Ouranosinc/jenkins-master
  # optional, default "origin/master" (f546be3017dba3717d787c9f7cd64342bd62e730)
  # branch:
  checkout_name: jenkins-master
  # dir_maps, optional: no rsync if missing
  dir_maps:
  # rsync content below source_dir into dest_dir
  - source_dir: initial-jenkins-plugins-suggestion
    dest_dir: /tmp/deploy-data-test-deploy/jenkins-plugins
    # optional, useful for include/exclude filter rules
    # rsync_extra_opts:
  # post_action, optional, useful for:
  # * post rsync additional file remapping
  # * execute actions after clone, without rsync required
  # post_action notes:
  # * Current work dir is the checkout root.
  # * GIT_PREVIOUS_COMMIT_HASH, GIT_NEW_COMMIT_HASH, GIT_CHANGED_FILES,
  #   RSYNC_OUTPUT can be used to determine file changed since previous run
  # * On initial clone, GIT_PREVIOUS_COMMIT_HASH, and GIT_CHANGED_FILES will be empty.
  # * If no dir_maps is specified, RSYNC_OUTPUT will be empty.
  # post_actions:
  # - action: ENV_VAR=for_script ENV_VAR2=value2 script/inside/checkout arg1 arg2
  # - action: >-
  #     ANY_DEPLOY_DATA_VAR=${ANY_DEPLOY_DATA_VAR}
  #     ENV_VAR2=value2
  #     /abs/path/dest_dir/script
  #     arg1 arg2

- repo_url: https://github.com/Ouranosinc/jenkins-config
  branch: 0b1592a7102c95a1e5090877b0edfc7d192ce0e2
  checkout_name: jenkins-config
  dir_maps:
  - source_dir: canarie-presentation/
    dest_dir: /tmp/deploy-data-test-deploy/canarie
    # sync only .txt, .html and .gif files, if other already existing files,
    # ignore them, unless they have same extensions.
    rsync_extra_opts: --include=*/ --include=*.txt --include=*.html --include=*.gif --exclude=*
  - source_dir: jcasc
    # remap dir jcasc inside previous dir canarie, without conflicting with
    # previous canarie sync.  This works because no .txt, .html, .gif in jcasc.
    dest_dir: /tmp/deploy-data-test-deploy/canarie/jcasc
    rsync_extra_opts:
  post_actions:
  - action: echo GIT_PREVIOUS_COMMIT_HASH=$GIT_PREVIOUS_COMMIT_HASH
  - action: echo GIT_NEW_COMMIT_HASH=$GIT_NEW_COMMIT_HASH
  - action: echo GIT_CHANGED_FILES=$GIT_CHANGED_FILES
  - action: echo RSYNC_OUTPUT=$RSYNC_OUTPUT

- repo_url: https://github.com/Ouranosinc/pavics-sdi
  branch: ebf2e3f584ae424de3b01e4f320a91d8f766ec03
  checkout_name: pavics-sdi
  dir_maps:
    # sync only 2 sub-dirs and .rst files under source/
  - source_dir: docs/
    dest_dir: /tmp/deploy-data-test-deploy/pavics-sdi
    rsync_extra_opts: >-
      --include=*/
      --include=source/tutorials/**
      --include=source/processes/**
      --include=source/*.rst
      --exclude=*
    # sync only .yml files at the root of checkout
  - source_dir: .
    dest_dir: /tmp/deploy-data-test-deploy/pavics-sdi
    rsync_extra_opts: --include=/ --include=*.yml --exclude=*
    # move dir 'notebooks' one level higher in hierarchy
  - source_dir: docs/source
    dest_dir: /tmp/deploy-data-test-deploy/pavics-sdi
    rsync_extra_opts: --include=*/ --include=notebooks/** --exclude=*
  post_actions:
  - action: echo GIT_PREVIOUS_COMMIT_HASH=$GIT_PREVIOUS_COMMIT_HASH
  - action: echo GIT_NEW_COMMIT_HASH=$GIT_NEW_COMMIT_HASH
  - action: echo GIT_CHANGED_FILES=$GIT_CHANGED_FILES
  - action: echo RSYNC_OUTPUT=$RSYNC_OUTPUT

- repo_url: https://gitlab.com/tlvu/debug-utils
  branch: 2fad34e0daaf1532e38077fb11af7a84eb3978ab
  checkout_name: debug-utils
  # execute actions without rsync
  post_actions:
  - action: ENV_VAR=for_script ENV_VAR2=value2 sh-utils/echoargs --opt1 arg1 arg2
  - action: >-
      REPO_NUM=${REPO_NUM}
      GIT_REPO_URL=${GIT_REPO_URL}
      ECHOARGS2=var2
      GIT_PREVIOUS_COMMIT_HASH="${GIT_PREVIOUS_COMMIT_HASH}"
      GIT_NEW_COMMIT_HASH="${GIT_NEW_COMMIT_HASH}"
      GIT_CHANGED_FILES="${GIT_CHANGED_FILES}"
      RSYNC_OUTPUT="${RSYNC_OUTPUT}"
      sh-utils/echoargs
      --opt1 --opt2 arg1
      arg2 arg3
  # show execution result of this sample config file
  - action: /bin/ls -l /tmp/deploy-data-clone-cache
  - action: find /tmp/deploy-data-test-deploy
  - action: echo GIT_PREVIOUS_COMMIT_HASH=$GIT_PREVIOUS_COMMIT_HASH
  - action: echo GIT_NEW_COMMIT_HASH=$GIT_NEW_COMMIT_HASH
  - action: echo GIT_CHANGED_FILES=$GIT_CHANGED_FILES
  - action: echo RSYNC_OUTPUT=$RSYNC_OUTPUT

- repo_url: https://gitlab.com/tlvu/debug-utils
  # simulate subsequent run in pull mode instead of initial clone
  branch: 3fc44e57aad82224f79dbeaeb603fa4efe0f5e68
  checkout_name: debug-utils
  post_actions:
  - action: echo GIT_PREVIOUS_COMMIT_HASH=$GIT_PREVIOUS_COMMIT_HASH
  - action: echo GIT_NEW_COMMIT_HASH=$GIT_NEW_COMMIT_HASH
  - action: echo GIT_CHANGED_FILES=$GIT_CHANGED_FILES
  - action: echo RSYNC_OUTPUT=$RSYNC_OUTPUT


# vi: tabstop=8 expandtab shiftwidth=2 softtabstop=2
