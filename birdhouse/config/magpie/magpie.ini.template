###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###
# From sample
# https://github.com/Ouranosinc/Magpie/blob/master/config/magpie.ini
###

[composite:main]
use = egg:Paste#urlmap
/ = magpie_app
#/api = api_app
#/magpie/api = api_app

[app:magpie_app]
use = egg:magpie
filter-with = urlprefix

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes = pyramid_tm ziggurat_foundations.ext.pyramid.sign_in ziggurat_foundations.ext.pyramid.get_user

# magpie
#
#   other overridable variables available in magpie/constants.py
#
magpie.port = 2001
magpie.url = https://${PAVICS_FQDN}/magpie
magpie.max_restart = 5
magpie.push_phoenix = true
# This secret should be the same in Twitcher !
magpie.secret = ${MAGPIE_SECRET}
magpie.admin_user = ${MAGPIE_ADMIN_USERNAME}
magpie.admin_password = ${MAGPIE_ADMIN_PASSWORD}

# ziggurat
ziggurat_foundations.model_locations.User = magpie.models:User
ziggurat_foundations.sign_in.username_key = user_name
ziggurat_foundations.sign_in.password_key = password
ziggurat_foundations.sign_in.came_from_key = came_from
ziggurat_foundations.sign_in.sign_in_pattern = /signin_internal
ziggurat_foundations.sign_in.sign_out_pattern = /signout
ziggurat_foundations.session_provider_callable = magpie.models:get_session_callable

# github (login provider)
github.client_id=${GITHUB_CLIENT_ID}
github.client_secret=${GITHUB_CLIENT_SECRET}

# Caching settings for specific sections/functions - improves performance response times of recurring requests
# See Twitcher INI configuration for caching that takes effect when resolving access enforcement to actual services.
# Following cache settings apply only during Magpie API requests.
#
# NOTE: Caching will only take effect with Magpie >= 3.7
# Detail:
#   Region 'acl' takes effect whenever computing "effective permissions" of user/group onto a service/resource.
#   Because Magpie is employed to manage those permissions and that computing the effective resolution of the
#   complete resource hierarchy and full user-group membership inheritance is fairly rare, caching is not specifically
#   needed here. It is actually more often then not useful to always refresh the latest states to be sure of which
#   permissions are actually applied when the administrator manages them. Therefore, all caches are disabled here, but
#   this is not the case on Twitcher side.
cache.regions = acl, service
cache.type = memory
cache.enabled = false
cache.acl.enabled = false
cache.service.enabled = false

[app:api_app]
use = egg:Paste#static
document_root = %(here)s/ui/swagger

[filter:urlprefix]
use = egg:PasteDeploy#prefix
# prefix must be adjusted according to 'MAGPIE_URL' / 'magpie.url'
prefix = /magpie

###
# wsgi server configuration
###

[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port=2001
timeout=10
workers=3
threads=4

# used by magpie/alembic with symlink, %(here)s corresponds to this directory
[alembic]
script_location = %(here)s/../magpie/alembic
#sqlalchemy.url = postgresql://postgres:postgres@localhost/magpie

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, magpie, sqlalchemy, alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console
formatter = generic

[logger_magpie]
# "level = DEBUG"   logs detailed information about operations/settings (not for production, will leak sensitive data)
# "level = INFO"    reports useful information, not leaking details about settings
# "level = WARN"    only potential problems are reported
level = DEBUG
handlers =
qualname = magpie
formatter = generic

[logger_sqlalchemy]
# "level = DEBUG"   logs SQL queries, transactions and results
# "level = INFO"    logs SQL queries (data can be identified from query field values)
# "level = WARN"    logs neither (recommended for production systems, avoid anything below unless for dev/debug system)
level = WARN
handlers =
qualname = sqlalchemy.engine
formatter = generic

[logger_alembic]
level = INFO
handlers =
qualname = alembic
formatter = generic

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[formatter_generic]
format = [%(asctime)s] %(levelname)-10.10s [%(threadName)s][%(name)s] %(message)s
