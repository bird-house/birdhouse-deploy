##############################################################################
# Generic job for deploy-data script.
# Configuration vars, set in env.local before sourcing this file.
# This job assume the "scheduler" component is enabled.
##############################################################################

# Cronjob schedule.
if [ -z "$DEPLOY_DATA_JOB_SCHEDULE" ]; then
    echo "Error: DEPLOY_DATA_JOB_SCHEDULE not set" 1>&2
    exit 1
    #DEPLOY_DATA_JOB_SCHEDULE="3 1,4,7,10,13,16,19,22 * * *"  # UTC
fi

# Job name.
if [ -z "$DEPLOY_DATA_JOB_JOB_NAME" ]; then
    echo "Error: DEPLOY_DATA_JOB_JOB_NAME not set" 1>&2
    exit 1
    #DEPLOY_DATA_JOB_JOB_NAME="job_name"
fi

# Location of deploy-data config file.
if [ -z "$DEPLOY_DATA_JOB_CONFIG" ]; then
    echo "Error: DEPLOY_DATA_JOB_CONFIG not set" 1>&2
    exit 1
    #DEPLOY_DATA_JOB_CONFIG="${COMPOSE_DIR}/../../birdhouse-deploy-ouranos/scheduler-jobs/retrieve_geps_forecasts.yml"
fi

# Job description.
if [ -z "$DEPLOY_DATA_JOB_JOB_DESCRIPTION" ]; then
    DEPLOY_DATA_JOB_JOB_DESCRIPTION="$DEPLOY_DATA_JOB_JOB_NAME"
fi

# Location for local cache of git clone to save bandwidth and time from always
# re-cloning from scratch.
if [ -z "$DEPLOY_DATA_JOB_CHECKOUT_CACHE" ]; then
    DEPLOY_DATA_JOB_CHECKOUT_CACHE="${DATA_PERSIST_ROOT:-/data}/deploy_data_cache/${DEPLOY_DATA_JOB_JOB_NAME}"
fi

# Log file location.  Default location under /var/log/PAVICS/ has built-in logrotate.
if [ -z "$DEPLOY_DATA_JOB_LOGFILE" ]; then
    DEPLOY_DATA_JOB_LOGFILE="/var/log/PAVICS/${DEPLOY_DATA_JOB_JOB_NAME}.log"
fi

# Docker image to run deploy-date script.
if [ -z "$DEPLOY_DATA_JOB_DOCKER_IMAGE" ]; then
    DEPLOY_DATA_JOB_DOCKER_IMAGE="docker:19.03.6-git"
fi

# Location of ssh private key for git clone over ssh, useful for private repos.
#DEPLOY_DATA_JOB_GIT_SSH_IDENTITY_FILE="/path/to/id_rsa"
#DEPLOY_DATA_JOB_GIT_SSH_IDENTITY_FILE=/home/vagrant/.ssh/id_rsa_git_ssh_read_only

# Docker run extra opts.
# 4 spaces in front of --env very important to respect.
#DEPLOY_DATA_JOB_DOCKER_RUN_EXTRA_OPTS="
#    --env ENV1=val1
#    --env ENV2=val2"

##############################################################################
# End configuration vars
##############################################################################


if [ -z "`echo "$AUTODEPLOY_EXTRA_SCHEDULER_JOBS" | grep $DEPLOY_DATA_JOB_JOB_NAME`" ]; then

    # Add job only if not already added (config is read more than once during
    # autodeploy process).

    LOGFILE_DIRNAME="`dirname "$DEPLOY_DATA_JOB_LOGFILE"`"

    EXTRA_DOCKER_ARGS=""
    if [ -n "$DEPLOY_DATA_JOB_GIT_SSH_IDENTITY_FILE" ]; then
        EXTRA_DOCKER_ARGS="
    --volume ${DEPLOY_DATA_JOB_GIT_SSH_IDENTITY_FILE}:${DEPLOY_DATA_JOB_GIT_SSH_IDENTITY_FILE}:ro
    --env DEPLOY_DATA_GIT_SSH_IDENTITY_FILE=${DEPLOY_DATA_JOB_GIT_SSH_IDENTITY_FILE}"
    fi

    export AUTODEPLOY_EXTRA_SCHEDULER_JOBS="
$AUTODEPLOY_EXTRA_SCHEDULER_JOBS

- name: $DEPLOY_DATA_JOB_JOB_NAME
  comment: $DEPLOY_DATA_JOB_JOB_DESCRIPTION
  schedule: '$DEPLOY_DATA_JOB_SCHEDULE'
  command: '/deploy-data ${DEPLOY_DATA_JOB_CONFIG}'
  dockerargs: >-
    --rm --name $DEPLOY_DATA_JOB_JOB_NAME
    --volume /var/run/docker.sock:/var/run/docker.sock:ro
    --volume ${COMPOSE_DIR}/deployment/deploy-data:/deploy-data:ro
    --volume ${DEPLOY_DATA_JOB_CONFIG}:${DEPLOY_DATA_JOB_CONFIG}:ro
    --volume ${DEPLOY_DATA_JOB_CHECKOUT_CACHE}:${DEPLOY_DATA_JOB_CHECKOUT_CACHE}:rw
    --volume ${LOGFILE_DIRNAME}:${LOGFILE_DIRNAME}:rw
    --env DEPLOY_DATA_CHECKOUT_CACHE=${DEPLOY_DATA_JOB_CHECKOUT_CACHE}
    --env DEPLOY_DATA_LOGFILE=${DEPLOY_DATA_JOB_LOGFILE} ${EXTRA_DOCKER_ARGS} ${DEPLOY_DATA_JOB_DOCKER_RUN_EXTRA_OPTS}
  image: '$DEPLOY_DATA_JOB_DOCKER_IMAGE'
"

fi


# Reset all config vars to prevent cross-contamination between successive invocations.
DEPLOY_DATA_JOB_SCHEDULE=""
DEPLOY_DATA_JOB_JOB_NAME=""
DEPLOY_DATA_JOB_CONFIG=""
DEPLOY_DATA_JOB_CHECKOUT_CACHE=""
DEPLOY_DATA_JOB_LOGFILE=""
DEPLOY_DATA_JOB_JOB_DESCRIPTION=""
DEPLOY_DATA_JOB_DOCKER_IMAGE=""
DEPLOY_DATA_JOB_GIT_SSH_IDENTITY_FILE=""
DEPLOY_DATA_JOB_DOCKER_RUN_EXTRA_OPTS=""


# vi: tabstop=8 expandtab shiftwidth=4 softtabstop=4
