
export THANOS_VERSION=v0.35.1
export THANOS_DOCKER="thanosio/thanos"
export THANOS_IMAGE='${THANOS_DOCKER}:${THANOS_VERSION}'

export THANOS_MINIO_VERSION=RELEASE.2024-05-27T19-17-46Z
export THANOS_MINIO_DOCKER=minio/minio
export THANOS_MINIO_IMAGE='${MINIO_DOCKER}:${MINIO_VERSION}'

# Minio uses object storage on disk at this location
export THANOS_MINIO_DATA_STORE='${BIRDHOUSE_DATA_PERSIST_ROOT}/thanos_minio_data/'

# Note that bucket names must only contain lowercase ascii, digits, - and .
export THANOS_MINIO_BUCKET_NAME=thanos-bucket

# Minio credentials
export __DEFAULT__THANOS_MINIO_ROOT_USER=minioadmin
export __DEFAULT__THANOS_MINIO_ROOT_PASSWORD=minioadmin
export THANOS_MINIO_ROOT_USER="${__DEFAULT__MINIO_ROOT_USER}"
export THANOS_MINIO_ROOT_PASSWORD="${__DEFAULT__MINIO_ROOT_PASSWORD}"

# Set a schedule to run the compactor. This should be at least double the largest longterm-metrics interval.
# eg. if thanos is collecting a metric that is calculated every 24h (daily) then this value should be at least 48h
export THANOS_COMPACTOR_WAIT_INTERVAL=48h

# The longterm data retention time can be shortened back to the default since Thanos is now responsible for
# storing longterm data, not the prometheus-longterm-metrics component.
export PROMETHEUS_LONGTERM_RETENTION_TIME=15d

# The thanos-sidecar component requires that these two values be equal or else it cannot perform its own compaction
# https://thanos.io/tip/components/sidecar.md/#sidecar
export PROMETHEUS_LONGTERM_TSDB_MIN_BLOCK_DURATION=2h
export PROMETHEUS_LONGTERM_TSDB_MAX_BLOCK_DURATION=2h

VARS="
  $VARS
  \$THANOS_MINIO_ROOT_USER
  \$THANOS_MINIO_ROOT_PASSWORD
"

export DELAYED_EVAL="
  $DELAYED_EVAL
  THANOS_IMAGE
  THANOS_MINIO_IMAGE
  THANOS_MINIO_DATA_STORE
"

COMPONENT_DEPENDENCIES="
  ./optional-components/prometheus-longterm-metrics
"
