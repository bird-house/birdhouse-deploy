#!/bin/sh

# All env in this default.env can be overridden by env.local.

# All env in this default.env must NOT depend on any other env.  If they do, they
# must use single quotes to avoid early expansion before overrides in env.local
# are applied and must be added to the list of DELAYED_EVAL.

export COWBIRD_JUPYTER_ACCESS_DIR="$COMPOSE_DIR/optional-components/test-cowbird-jupyter-access"

export TEST_COWBIRD_JUPYTERHUB_USERNAME="testcowbirdjupyter"
export TEST_COWBIRD_JUPYTERHUB_PASSWORD="qwertyqwerty"

export DOCKER_NOTEBOOK_WORKFLOW_IMAGE="$(echo ${JUPYTERHUB_DOCKER_NOTEBOOK_IMAGES} | grep pavics/workflow-tests | xargs)"

export JUPYTERHUB_CONFIG_OVERRIDE="
${JUPYTERHUB_CONFIG_OVERRIDE}

if not c.JupyterHub.services:  # in case None
    c.JupyterHub.services = []
c.JupyterHub.services.extend([
    {
        'name': 'service-admin',
        'api_token': 'admin-token',
    },
])

if not c.JupyterHub.load_roles:  # in case None
    c.JupyterHub.load_roles = []
c.JupyterHub.load_roles.extend([
    {
        'name': 'service-role',
        'scopes': [
            'admin:users',
            'admin:servers',
            'tokens'
        ],
        'services': [
            # assign the service the above permissions
            'service-admin',
        ],
    }
])

c.DockerSpawner.environment['TEST_COWBIRD_JUPYTERHUB_USERNAME'] = os.environ['TEST_COWBIRD_JUPYTERHUB_USERNAME']
c.DockerSpawner.environment['JUPYTERHUB_USER_DATA_DIR'] = os.environ['JUPYTERHUB_USER_DATA_DIR']

c.DockerSpawner.environment['NOTEBOOK_DIR'] = notebook_dir
c.DockerSpawner.environment['WORKSPACE_DIR'] = container_workspace_dir
"

# add any component that this component requires to run
COMPONENT_DEPENDENCIES="
  ./config/cowbird
  ./config/geoserver
  ./config/jupyterhub
  ./config/magpie
  ./optional-components/all-public-access
  ./optional-components/test-geoserver-secured-access
  ./optional-components/secure-data-proxy
"
